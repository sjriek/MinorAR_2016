<launch>
<arg name="xtion" default="true" doc="enable xtion camera"/>
<arg name="kinect" default="false" doc="enable kinect 1 camera"/>
<arg name="capturing" default="true" doc="enable pointcloud capturing"/>
<arg name="filtering" default="true" doc="enable pointcloud filtering"/>
<arg name="extraction" default="false" doc="enable pointcloud extraction"/>

<arg name="gui" default="false" doc="enable gui (e.g. rviz)"/>

<param name="/pcl_capturing/finished" type="bool" value="false" />
<param name="/pcl_filtering/finished" type="bool" value="false" />
<param name="/pcl_extraction/finished" type="bool" value="false" />

<group if="$(arg xtion)">
	<include file="$(find openni2_launch)/launch/openni2.launch" />
	<param name="rgb_processing" value="false"/>
	<param name="depth_registration" value="false"/>
</group>

<group if="$(arg kinect)">
        <include file="$(find openni_launch)/launch/openni.launch" />
</group>

<node 
	pkg="tf" 
	type="static_transform_publisher" 
	name="camera_link_broadcaster" 
	args="0 0.1 0.06 1.57 0 0 hand camera_link 100" 
/>

<group if="$(arg capturing)">
        <include file="$(find pcl_capturing)/launch/pcl_capturing.launch" />
        <include file="$(find pclcaptureing_positioning)/launch/pclcapture_position.launch" />
</group>

<group if="$(arg filtering)">
	<include file="$(find pcl_filtering)/launch/pcl_filtering.launch" />
</group>

<group if="$(arg extraction)">
        <include file="$(find pcl_extraction)/launch/pcl_extraction.launch" />
</group>

<group if="$(arg gui)">
<node
        name="rviz"
        pkg="rviz"
        type="rviz"
	respawn="true"
/>
</group>
</launch>
